import{_ as s,c as n,o as a,a as l}from"./app.4feed8ca.js";const C=JSON.parse('{"title":"nuxt发布部署","description":"nuxt发布部署","frontmatter":{"title":"nuxt发布部署","description":"nuxt发布部署","aside":false,"date":"2023-01-14T00:00:00.000Z","tags":["Nuxt"]},"headers":[{"level":2,"title":"服务端渲染部署","slug":"服务端渲染部署","link":"#服务端渲染部署","children":[]},{"level":2,"title":"静态应用部署","slug":"静态应用部署","link":"#静态应用部署","children":[]},{"level":2,"title":"单页面应用程序部署（SPA）","slug":"单页面应用程序部署-spa","link":"#单页面应用程序部署-spa","children":[]},{"level":2,"title":"nginx 配置","slug":"nginx-配置","link":"#nginx-配置","children":[]}],"relativePath":"posts/nuxt发布部署.md"}'),p={name:"posts/nuxt发布部署.md"},e=l(`<p>nuxt.js 提供三种部署方式，服务端渲染部署，静态应用部署，单页面应用部署。</p><p>部署前远程服务器需要安装 node，pm2，nginx</p><h2 id="服务端渲染部署" tabindex="-1">服务端渲染部署<hr> <a class="header-anchor" href="#服务端渲染部署" aria-hidden="true">#</a></h2><p>nuxt.config.js 配置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">server</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// 服务端渲染需要将target设置为server 默认是server</span></span>
<span class="line"></span></code></pre></div><ul><li>首先执行 build 打包</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm run build</span></span>
<span class="line"></span></code></pre></div><ul><li>将&quot;.nuxt(隐藏项目)，static，nuxt.config.js, package.json&quot;这四个文件放在服务器中</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm run install</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// 在服务器项目目录下执行安装依赖</span></span>
<span class="line"><span style="color:#A6ACCD;">npm run start</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// 可以执行测试一下项目是否能正常启动</span></span>
<span class="line"><span style="color:#676E95;">// 注意这边不要使用 npm run dev（开发模式）</span></span>
<span class="line"></span></code></pre></div><p>如果测试没有问题就可以使用 pm2 启动项目</p><ul><li>在项目根目录使用 pm2 启动项目</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">pm2 start npm </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">project name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> run start</span></span>
<span class="line"></span></code></pre></div><p>启动起来之后执行 pm2 list 可以查看到正在守护的 pm2 进程。</p><h2 id="静态应用部署" tabindex="-1">静态应用部署<hr> <a class="header-anchor" href="#静态应用部署" aria-hidden="true">#</a></h2><p>nuxt.js 可以依据路由配置将应用静态化，使得我们可以将应用部署到任何一个服务器静态站点。</p><p>nuxt.config.js 配置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">static</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span></code></pre></div><ul><li>打包生成 dist 文件</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm run generate</span></span>
<span class="line"></span></code></pre></div><p>最后将生成的 dist 文件放到服务器中</p><h2 id="单页面应用程序部署-spa" tabindex="-1">单页面应用程序部署（SPA）<hr> <a class="header-anchor" href="#单页面应用程序部署-spa" aria-hidden="true">#</a></h2><p>nuxt generate 在 build、generate 时间内仍然需要 SSR 引擎，同时具有预渲染所有页面的优势，并具有较高的 SEO 优化和页面加载能力。内容在构建时生成。</p><ul><li>将 nuxt.config.js 中的 mode 更改为 spa</li><li>运行 npm run build</li><li>将生成的 dist 文件夹部署到服务器</li></ul><h2 id="nginx-配置" tabindex="-1">nginx 配置<hr> <a class="header-anchor" href="#nginx-配置" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">upstream test </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">server</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">0.0</span><span style="color:#F07178;">:</span><span style="color:#F78C6C;">3000</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// 你的服务地址</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">keepalive</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">64</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">server </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">listen</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">server_name</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">baidu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">//你的域名</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">location</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">proxy_pass</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;">//test;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,25),o=[e];function t(c,r,i,y,d,D){return a(),n("div",null,o)}const u=s(p,[["render",t]]);export{C as __pageData,u as default};
