import{_ as e,c as t,d as s,b as l,w as p,e as n,a as o,r as c,o as r}from"./app.4feed8ca.js";const A="/klein/eslint.b8cc06d2.png",F="/klein/rule2.6c3204d1.jpg",$=JSON.parse('{"title":"代码风格约束","description":"代码风格约束","frontmatter":{"title":"代码风格约束","description":"代码风格约束","aside":false,"date":"2023-03-07T00:00:00.000Z","tags":["项目搭建"]},"headers":[{"level":2,"title":"约束插件","slug":"约束插件","link":"#约束插件","children":[]},{"level":2,"title":"配置 Prettier","slug":"配置-prettier","link":"#配置-prettier","children":[]},{"level":2,"title":"配置 Eslint","slug":"配置-eslint","link":"#配置-eslint","children":[]},{"level":2,"title":"解决冲突","slug":"解决冲突","link":"#解决冲突","children":[]},{"level":2,"title":"配置styleling","slug":"配置styleling","link":"#配置styleling","children":[]},{"level":2,"title":"配置husky","slug":"配置husky","link":"#配置husky","children":[]},{"level":2,"title":"规则列表","slug":"规则列表","link":"#规则列表","children":[]}],"relativePath":"posts/代码风格约束.md"}'),y={name:"posts/代码风格约束.md"},D=s("h2",{id:"约束插件",tabindex:"-1"},[n("约束插件 "),s("a",{class:"header-anchor",href:"#约束插件","aria-hidden":"true"},"#")],-1),C=s("ol",null,[s("li",null,[s("p",null,"eslint 主要作用：解决代码质量问题。校验代码是否存在质量问题 次要作用：可以配置代码风格【代码格式】，但是 eslint 并没有完善代码风格")]),s("li",null,[s("p",null,"prettier 主要作用：接管了 eslint 的代码风格问题。 而使用 Prettier + ESLint 就完完全全解决了两个问题。 建议先配置代码风格【Prettier】再配置【eslint】【styleling】")])],-1),i={id:"【配置前先看这里】",tabindex:"-1"},u=s("a",{class:"header-anchor",href:"#【配置前先看这里】","aria-hidden":"true"},"#",-1),d=s("ul",null,[s("li",null,"如果只需要保存时候就自动格式化，可只配置 Prettier 的【.prettierrc】文件，然后设置一下 vscode"),s("li",null,"想要上传提交代码前也自动格式化文件，还要配置 husky"),s("li",null,"eslint 建议都配置")],-1),E=s("h2",{id:"配置-prettier",tabindex:"-1"},[n("配置 Prettier "),s("a",{class:"header-anchor",href:"#配置-prettier","aria-hidden":"true"},"#")],-1),f=s("ul",null,[s("li",null,"进入【设置】 ，可快捷键 ctrl + 逗号"),s("li",null,"搜索 save 找到 Format On Save (保存时格式化文件) 勾选上即可")],-1),q={start:"3"},m=o("",1),g=o("",3),b={start:"4"},h=o("",7),_=s("li",null,"在项目中新建.vscode/settings.json 文件，然后在其中加入以下配置",-1),v=o("",29),w=o("",3),k={start:"2"},x=o("",1),B={start:"3"},T=o("",1),S={start:"4"},j=o("",3),P=o("",1),V={start:"2"},I=o("",10);function R(N,W,L,O,J,U){const a=c("font");return r(),t("div",null,[D,C,s("h4",i,[l(a,{color:"ff0000"},{default:p(()=>[n("【配置前先看这里】")]),_:1}),n(),u]),d,E,s("ol",null,[s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【下载插件】")]),_:1}),n("vsCode 下载格式化插件 👉 【Prettier - Code formatter】")]),s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【修改 vscode 配置】")]),_:1}),n("实现保存文件代码时候，自动格式化代码")])]),f,s("ol",q,[s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【配置自定义格式】")]),_:1}),n("再根目录新建配置文件 .prettierrc.js | .prettierrc 一般是这两种【推荐选择 js 方式】")])]),s("ul",null,[s("li",null,[n("一般 js 结尾的 是需要在 package.json 里面配置调用 prettier 进行格式化的命令"),l(a,{color:"ff0000"},{default:p(()=>[n("【用于配合 husky 使用，在代码提交之前进行格式化，确保存入仓库的代码都是格式化后的良好的代码。】")]),_:1})])]),s("ul",null,[s("li",null,[n(".prettierrc 用于配合 vscode 保存时候立即进行格式化。"),l(a,{color:"ff0000"},{default:p(()=>[n("【注意：这个文件不要写注释等其他内容，不然不生效】")]),_:1})])]),m,s("p",null,[n(".prettierrc"),l(a,{color:"ff0000"},{default:p(()=>[n("【注意：这个文件不要写注释等其他内容，不然不生效】")]),_:1})]),g,s("ol",b,[s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【忽略检查】")]),_:1}),n(" .eslintignore")])]),h,s("ol",null,[s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【下载插件】")]),_:1}),n("vsCode 下载格式化插件 👉 【Eslint】")]),_]),v,s("ol",null,[s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【安装依赖】")]),_:1}),n(" stylelint 是运行工具，stylelint-config-standard 是stylelint的推荐配置，stylelint-order是CSS属性排序插件,stylelint-scss引入了特定于SCSS语法的规则")])]),w,s("ol",k,[s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【配置 stylelint】")]),_:1}),n("在项目根目录建立stylelint配置文件 .stylelintrc.js(json格式也行，推荐使用js可以添加注释) ：")])]),x,s("ol",B,[s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【添加忽略配置】")]),_:1}),n("根目录添加.stylelintignore文件，添加需要忽略的文件夹或文件地址")])]),T,s("ol",S,[s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【添加命令 】")]),_:1}),n("stylelint 检测 stylefix 修复 有些不能自动修改的 需要手动修复")])]),j,l(a,{color:"#002fa7"},{default:p(()=>[n("【请确保在此之前安装（npm install --save-dev）并配置所有代码质量工具，如Prettier和ESlint。并配置好以下命令】")]),_:1}),P,s("ol",V,[s("li",null,[l(a,{color:"#002fa7"},{default:p(()=>[n("【安装 lint-staged】")]),_:1}),n("mrm 安装 lint-staged 会自动把 husky 一起安装下来")])]),I])}const z=e(y,[["render",R]]);export{$ as __pageData,z as default};
