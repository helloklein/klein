import{_ as s,c as a,o as n,a as p}from"./app.4feed8ca.js";const i=JSON.parse('{"title":"pm2的介绍和使用","description":"pm2的介绍和使用","frontmatter":{"title":"pm2的介绍和使用","description":"pm2的介绍和使用","aside":false,"date":"2023-01-15T00:00:00.000Z","tags":["Nuxt"]},"headers":[],"relativePath":"posts/pm2的介绍和使用.md"}'),l={name:"posts/pm2的介绍和使用.md"},o=p(`<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">安装</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g pm2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">使用</span></span>
<span class="line"><span style="color:#A6ACCD;">pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">i </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"># 后台运行pm2，启动4个app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js  </span></span>
<span class="line"><span style="color:#A6ACCD;"># 也可以把</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">max</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> 参数传递给 start    </span></span>
<span class="line"><span style="color:#A6ACCD;"># 正确的进程数目依赖于Cpu的核心数目</span></span>
<span class="line"><span style="color:#A6ACCD;">常用命令</span></span>
<span class="line"><span style="color:#A6ACCD;"> npm install pm2 </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g # 命令行安装 pm2</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">i </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> #后台运行pm2，启动4个app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js</span></span>
<span class="line"><span style="color:#A6ACCD;">               # 也可以把</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">max</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> 参数传递给 start</span></span>
<span class="line"><span style="color:#A6ACCD;">               # 正确的进程数目依赖于Cpu的核心数目</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">name my</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">api # 命名进程</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 list # 显示所有进程状态</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 monit # 监视所有进程</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 logs # 显示所有进程日志</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 stop all # 停止所有进程</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 restart all # 重启所有进程</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 reload all # 0</span><span style="color:#82AAFF;">秒停机重载进程</span><span style="color:#A6ACCD;"> (用于 NETWORKED 进程)</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 stop </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> # 停止指定的进程</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 restart </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> # 重启指定的进程</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 startup # 产生 init 脚本 保持进程活着</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 web # 运行健壮的 computer API </span><span style="color:#82AAFF;">endpoint</span><span style="color:#A6ACCD;"> (http:</span><span style="color:#676E95;">//localhost:9615)</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 </span><span style="color:#89DDFF;">delete</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> # 杀死指定的进程</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 </span><span style="color:#89DDFF;">delete</span><span style="color:#A6ACCD;"> all # 杀死全部进程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">运行进程的不同方式</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">i max # 根据有效CPU数目启动最大进程数目</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">i </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> # 启动3个进程</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">x #用fork模式启动 app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js 而不是使用 cluster</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">a </span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> # 用fork模式启动 app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#82AAFF;">并且传递参数</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">a </span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">name serverone # 启动一个进程并把它命名为 serverone</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 stop serverone # 停止 serverone 进程</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json # 启动进程</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 在 app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json里设置选项</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">i max </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">a </span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> #在</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">之后给 app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js 传递参数</span></span>
<span class="line"><span style="color:#A6ACCD;"> pm2 start app</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">i max </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">e err</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">o out</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log # 启动 并 生成一个配置文件</span></span>
<span class="line"></span></code></pre></div>`,1),e=[o];function t(c,C,r,A,D,y){return n(),a("div",null,e)}const m=s(l,[["render",t]]);export{i as __pageData,m as default};
